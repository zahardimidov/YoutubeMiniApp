from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import ReplyKeyboardMarkup, Message, WebAppInfo, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from database.requests import get_todays_downloadings, get_user, get_plans
from config import WEBAPP_URL
from datetime import datetime

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[[
        KeyboardButton(text='–ò—Å–∫–∞—Ç—å  üöÄ', web_app=WebAppInfo(url=WEBAPP_URL)),
        KeyboardButton(text='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§')
    ]])

    await message.answer('<b>–ü—Ä–∏–≤–µ—Ç!</b> üëã\n–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –≤–∏–¥–µ–æ –Ω–∞ <b>YouTube</b>!üé•\n\n‚ú® –° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å –ª–µ–≥–∫–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –∏ <b>—Å–∫–∞—á–∏–≤–∞—Ç—å</b> –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è <b>–≤–∏–¥–µ–æ –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</b>.\n\U0001F50E –ü—Ä–æ—Å—Ç–æ <b>–æ—Ç–∫—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—É</b>, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∏ <b>–≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –ø–æ–∏—Å–∫–æ–º</b>, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ.\n–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –î–∞–≤–∞–π –∏—Å–∫–∞—Ç—å! üöÄ', reply_markup=markup)

@router.message(F.text == '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§')
async def profile(message: Message):
    user = await get_user(user_id=message.from_user.id)

    if user.subscription_until == None or user.subscription_until < datetime.now().date():
        e = '–Ω–µ '
        markup = await get_plans_kb(user_id=user.id)
    else:
        e = ''
        markup = None

    downloadings = await get_todays_downloadings(user_id=message.from_user.id)

    await message.answer(f'üë§ {message.from_user.username}\n\U0001F4E5 –°–∫–∞—á–∏–≤–∞–Ω–∏—è –∑–∞ –¥–µ–Ω—å: {len(downloadings)}\n\u2728 –ü–æ–¥–ø–∏—Å–∫–∞ {e}–∞–∫—Ç–∏–≤–Ω–∞', reply_markup=markup)


async def get_plans_kb(user_id):
    plans = await get_plans()
    kb = []

    for plan in plans:
        kb.append([InlineKeyboardButton(text = f'{plan.price} —Ä—É–±. / {plan.days} –¥–Ω–µ–π', url=WEBAPP_URL+f'/api/pay?plan={plan.id}&user={user_id}')])

    return InlineKeyboardMarkup(inline_keyboard=kb)